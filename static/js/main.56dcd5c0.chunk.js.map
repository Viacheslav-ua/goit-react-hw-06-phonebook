{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Modal/Modal.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/Modal/Modal.tsx","redux/contacts/contacts-actions.ts","components/ContactForm/ContactForm.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","redux/contacts/contacts-reducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","className","S","backdrop","onClick","currentTarget","target","content","addContact","createAction","removeContact","setFilter","connect","state","contacts","dispatch","onFormSubmit","data","actions","useState","name","setName","number","setNumber","showModal","setShowModal","handleAddInput","i","RegExp","test","value","reset","toggleModal","Alert","severity","AlertTitle","contactsForm","onSubmit","preventDefault","items","find","item","toLowerCase","includes","id","uuidv4","TextField","label","variant","onChange","title","required","type","Button","btn","onDeleteContact","list","map","filter","row","text","filterValue","onChangeFilter","input","App","container","stateLoad","JSON","parse","createReducer","payload","_state","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.56dcd5c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ContactList_row__1c6Vn\",\"text\":\"ContactList_text__3Mj0P\",\"btn\":\"ContactList_btn__2dVN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__22NXY\",\"content\":\"Modal_content__zqYeI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__36k-6\",\"input\":\"ContactForm_input__1KrD-\",\"caption\":\"ContactForm_caption__1OeGd\",\"btn\":\"ContactForm_btn__5gli0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__w-SXl\",\"title\":\"App_title__3vF2r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Filter_caption__OQ7St\",\"input\":\"Filter_input__n9gri\"};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport S from \"./Modal.module.css\";\r\n\r\nconst modalRoot: any = document.querySelector(\"#modal-root\");\r\ninterface PropsType {\r\n  onClose: any;\r\n  children: React.ReactChild | React.ReactNode;\r\n}\r\nconst Modal: React.FC<PropsType> = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = (e: KeyboardEvent) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={S.backdrop} onClick={handleBackdropClick}>\r\n      <div className={S.content}>{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\nexport default Modal;\r\n","// import { ADD, REM, FILTER } from \"./contacts-actTypes\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\ntype contactsType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\nexport const addContact = createAction<contactsType>(\"contacts/Add\");\r\n// export const addContact = (data: contactsType) => ({\r\n//   type: ADD,\r\n//   payload: data,\r\n// });\r\n\r\nexport const removeContact = createAction<string>(\"contacts/Remove\");\r\n// export const removeContact = (id: string) => ({\r\n//   type: REM,\r\n//   payload: id,\r\n// });\r\n\r\nexport const setFilter = createAction<string | undefined>(\"contacts/setFilter\");\r\n\r\n// export const setFilter = (value: string) => ({\r\n//   type: FILTER,\r\n//   payload: value,\r\n// });\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport S from \"./ContactForm.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/contacts/contacts-actions\";\r\n\r\ninterface PropsType {\r\n  onFormSubmit: any;\r\n  contacts: any;\r\n}\r\n\r\ntype contactsType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\nconst ContactForm: React.FC<PropsType> = ({ contacts, onFormSubmit }) => {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [number, setNumber] = useState<string>(\"\");\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n\r\n  const handleAddInput =\r\n    (i: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const b = new RegExp(i);\r\n      if (b.test(e.currentTarget.value)) {\r\n        if (e.currentTarget.name === \"name\") setName(e.currentTarget.value);\r\n        if (e.currentTarget.name === \"number\") setNumber(e.currentTarget.value);\r\n      }\r\n    };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isName = contacts.items.find((item: contactsType) =>\r\n      item.name.toLowerCase().includes(name.toLowerCase())\r\n    );\r\n\r\n    if (isName) {\r\n      toggleModal();\r\n      return;\r\n    }\r\n    onFormSubmit({ id: uuidv4(), name: name, number: number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const toggleModal = (): void => {\r\n    setShowModal((state) => !state);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <Alert severity=\"warning\" onClose={toggleModal}>\r\n            <AlertTitle>Warning</AlertTitle>\r\n            {name} is already in contacts\r\n          </Alert>\r\n        </Modal>\r\n      )}\r\n      <form className={S.contactsForm} onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleAddInput(\"^$|^[$a-zA-Zа-яА-Я -']*$\")}\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone number\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleAddInput(\"^$|^\\\\+|^\\\\d[\\\\d\\\\s-.]*$\")}\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\" className={S.btn} variant=\"contained\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onFormSubmit: (data: contactsType) => dispatch(actions.addContact(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/contacts/contacts-actions\";\r\nimport S from \"./ContactList.module.css\";\r\ntype listType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\n// interface PropsType {\r\n//   contacts: listType[];\r\n//   onDeleteContact: string;\r\n// }\r\n\r\nconst ContactList: React.FC<any> = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={S.list}>\r\n      {contacts.items.map(\r\n        ({ id, name, number }: listType) =>\r\n          name.toLowerCase().includes(contacts.filter.toLowerCase()) && (\r\n            <li key={id} className={S.row}>\r\n              <p className={S.text}>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={S.btn} onClick={() => onDeleteContact(id)}>\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onDeleteContact: (id: string) => dispatch(actions.removeContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport S from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contacts-actions\";\r\n\r\ninterface PropsType {\r\n  filterValue: string;\r\n  onChangeFilter: any;\r\n}\r\n\r\nconst Filter: React.FC<PropsType> = ({ filterValue, onChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label=\"Find contacts by name\"\r\n        variant=\"standard\"\r\n        id=\"component-simple\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={S.input}\r\n        value={filterValue}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    filterValue: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    onChangeFilter: (e: React.ChangeEvent<HTMLInputElement>) =>\r\n      dispatch(setFilter(e.currentTarget.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport S from \"./App.module.css\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={S.container}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={S.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  removeContact,\r\n  setFilter,\r\n} from \"../contacts/contacts-actions\";\r\n\r\n// import { ADD, REM, FILTER } from \"./contacts-actTypes\";\r\n\r\ntype contactType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\n// interface actionTypes {\r\n//   type: string;\r\n//   payload: contactType | string;\r\n// }\r\n\r\nconst stateLoad: contactType[] = JSON.parse(\r\n  '[{\"id\":\"id-1\",\"name\":\"Rosie Simpson\",\"number\":\"459-12-56\"},{\"id\":\"id-2\",\"name\":\"Hermione Kline\",\"number\":\"443-89-12\"},{\"id\":\"id-3\",\"name\":\"Eden Clements\",\"number\":\"645-17-79\"},{\"id\":\"id-4\",\"name\":\"Annie Copeland\",\"number\":\"227-91-26\"}]'\r\n);\r\n\r\nconst items = createReducer(stateLoad, {\r\n  [addContact.type]: (state, { payload }) => [...state, payload],\r\n  [removeContact.type]: (state, { payload }) =>\r\n    state.filter((item: contactType) => item.id !== payload),\r\n});\r\n\r\n// const items = (\r\n//   state = stateLoad,\r\n//   { type, payload }: actionTypes\r\n// ) => {\r\n//   switch (type) {\r\n//     case ADD:\r\n//       return [...state, payload];\r\n\r\n//     case REM:\r\n//       return state.filter((item: contactType) => item.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filter = createReducer(\"\", {\r\n  [setFilter.type]: (_state, { payload }) => payload,\r\n});\r\n\r\n// const filter = (state = \"\", { type, payload }: any) => {\r\n//   switch (type) {\r\n//     case FILTER:\r\n//       return (state = payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <PersistGate loading={null} persistor={store.persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}